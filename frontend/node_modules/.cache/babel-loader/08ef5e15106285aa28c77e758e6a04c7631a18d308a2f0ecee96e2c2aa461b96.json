{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  name: 'Login',\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const formRef = ref(null);\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n    const loading = ref(false);\n    const error = ref('');\n\n    // Form validation rules\n    const rules = {\n      username: [{\n        required: true,\n        message: 'Please enter your username',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: 'Please enter your password',\n        trigger: 'blur'\n      }]\n    };\n\n    // Handle login form submission\n    const handleLogin = () => {\n      formRef.value.validate(async valid => {\n        if (!valid) return;\n        loading.value = true;\n        error.value = '';\n        try {\n          await store.dispatch('auth/login', loginForm);\n          router.push('/dashboard');\n        } catch (err) {\n          error.value = err.response?.data || 'Login failed. Please check your credentials.';\n        } finally {\n          loading.value = false;\n        }\n      });\n    };\n    return {\n      formRef,\n      loginForm,\n      loading,\n      error,\n      rules,\n      handleLogin\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useStore","useRouter","name","setup","store","router","formRef","loginForm","username","password","loading","error","rules","required","message","trigger","handleLogin","value","validate","valid","dispatch","push","err","response","data"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\auth\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-form\">\r\n      <h1 class=\"login-title\">Student Management System</h1>\r\n      \r\n      <el-alert\r\n        v-if=\"error\"\r\n        :title=\"error\"\r\n        type=\"error\"\r\n        show-icon\r\n        @close=\"error = ''\"\r\n        class=\"mb-20\"\r\n      />\r\n      \r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"loginForm\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n      >\r\n        <el-form-item label=\"Username\" prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            placeholder=\"Enter your username\"\r\n            prefix-icon=\"el-icon-user\"\r\n            clearable\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Password\" prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            @keyup.enter=\"handleLogin\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button\r\n            type=\"primary\"\r\n            class=\"full-width\"\r\n            :loading=\"loading\"\r\n            @click=\"handleLogin\"\r\n          >\r\n            Login\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <p class=\"text-center mt-20\">\r\n        Default admin credentials: admin / admin123\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const formRef = ref(null)\r\n    const loginForm = reactive({\r\n      username: '',\r\n      password: ''\r\n    })\r\n    const loading = ref(false)\r\n    const error = ref('')\r\n    \r\n    // Form validation rules\r\n    const rules = {\r\n      username: [\r\n        { required: true, message: 'Please enter your username', trigger: 'blur' }\r\n      ],\r\n      password: [\r\n        { required: true, message: 'Please enter your password', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // Handle login form submission\r\n    const handleLogin = () => {\r\n      formRef.value.validate(async valid => {\r\n        if (!valid) return\r\n        \r\n        loading.value = true\r\n        error.value = ''\r\n        \r\n        try {\r\n          await store.dispatch('auth/login', loginForm)\r\n          router.push('/dashboard')\r\n        } catch (err) {\r\n          error.value = err.response?.data || 'Login failed. Please check your credentials.'\r\n        } finally {\r\n          loading.value = false\r\n        }\r\n      })\r\n    }\r\n    \r\n    return {\r\n      formRef,\r\n      loginForm,\r\n      loading,\r\n      error,\r\n      rules,\r\n      handleLogin\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Component specific styles would go here */\r\n/* Most styling comes from global CSS in assets/styles/main.css */\r\n</style> "],"mappings":"AA4DA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AAErC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,OAAM,GAAIR,GAAG,CAAC,IAAI;IACxB,MAAMS,SAAQ,GAAIR,QAAQ,CAAC;MACzBS,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;IACD,MAAMC,OAAM,GAAIZ,GAAG,CAAC,KAAK;IACzB,MAAMa,KAAI,GAAIb,GAAG,CAAC,EAAE;;IAEpB;IACA,MAAMc,KAAI,GAAI;MACZJ,QAAQ,EAAE,CACR;QAAEK,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,OAAO,EAAE;MAAO,EAC1E;MACDN,QAAQ,EAAE,CACR;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,4BAA4B;QAAEC,OAAO,EAAE;MAAO;IAE7E;;IAEA;IACA,MAAMC,WAAU,GAAIA,CAAA,KAAM;MACxBV,OAAO,CAACW,KAAK,CAACC,QAAQ,CAAC,MAAMC,KAAI,IAAK;QACpC,IAAI,CAACA,KAAK,EAAE;QAEZT,OAAO,CAACO,KAAI,GAAI,IAAG;QACnBN,KAAK,CAACM,KAAI,GAAI,EAAC;QAEf,IAAI;UACF,MAAMb,KAAK,CAACgB,QAAQ,CAAC,YAAY,EAAEb,SAAS;UAC5CF,MAAM,CAACgB,IAAI,CAAC,YAAY;QAC1B,EAAE,OAAOC,GAAG,EAAE;UACZX,KAAK,CAACM,KAAI,GAAIK,GAAG,CAACC,QAAQ,EAAEC,IAAG,IAAK,8CAA6C;QACnF,UAAU;UACRd,OAAO,CAACO,KAAI,GAAI,KAAI;QACtB;MACF,CAAC;IACH;IAEA,OAAO;MACLX,OAAO;MACPC,SAAS;MACTG,OAAO;MACPC,KAAK;MACLC,KAAK;MACLI;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}