{"ast":null,"code":"import _regeneratorRuntime from \"E:/GoLand20240404/Project/student_management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/GoLand20240404/Project/student_management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'Dashboard',\n  setup: function setup() {\n    var store = useStore();\n    var loading = ref(false);\n    var recentStudents = ref([]);\n\n    // Get user from store\n    var user = computed(function () {\n      return store.getters['auth/user'];\n    });\n\n    // Computed properties for statistics\n    var studentCount = ref(0);\n    var classCount = ref(0);\n\n    // Fetch dashboard data\n    var fetchDashboardData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var params, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return store.dispatch('classes/fetchClasses');\n            case 4:\n              classCount.value = store.getters['classes/allClasses'].length;\n\n              // Fetch recent students (first page with small page size)\n              params = {\n                page: 1,\n                page_size: 5\n              };\n              _context.next = 8;\n              return store.dispatch('students/fetchStudents');\n            case 8:\n              response = _context.sent;\n              recentStudents.value = store.getters['students/allStudents'];\n              studentCount.value = store.getters['students/pagination'].total;\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching dashboard data:', _context.t0);\n            case 16:\n              _context.prev = 16;\n              loading.value = false;\n              return _context.finish(16);\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 13, 16, 19]]);\n      }));\n      return function fetchDashboardData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Fetch data when component is mounted\n    onMounted(fetchDashboardData);\n    return {\n      user: user,\n      loading: loading,\n      studentCount: studentCount,\n      classCount: classCount,\n      recentStudents: recentStudents\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","name","setup","store","loading","recentStudents","user","getters","studentCount","classCount","fetchDashboardData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","response","wrap","_callee$","_context","prev","next","value","dispatch","length","page","page_size","sent","total","t0","console","error","finish","stop","apply","arguments"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-container\">\r\n    <h1 class=\"page-title\">Dashboard</h1>\r\n    \r\n    <el-row :gutter=\"20\">\r\n      <!-- Students Card -->\r\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\r\n        <el-card class=\"dashboard-card\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h2>Students</h2>\r\n            </div>\r\n          </template>\r\n          <div class=\"card-content\">\r\n            <div class=\"stat-value\">{{ studentCount }}</div>\r\n            <div class=\"stat-label\">Total Students</div>\r\n            <el-button type=\"primary\" @click=\"$router.push('/students')\">\r\n              View Students\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <!-- Classes Card -->\r\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\r\n        <el-card class=\"dashboard-card\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h2>Classes</h2>\r\n            </div>\r\n          </template>\r\n          <div class=\"card-content\">\r\n            <div class=\"stat-value\">{{ classCount }}</div>\r\n            <div class=\"stat-label\">Total Classes</div>\r\n            <el-button type=\"primary\" @click=\"$router.push('/classes')\">\r\n              View Classes\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      \r\n      <!-- User Card -->\r\n      <el-col :xs=\"24\" :sm=\"12\" :md=\"8\">\r\n        <el-card class=\"dashboard-card\">\r\n          <template #header>\r\n            <div class=\"card-header\">\r\n              <h2>User Profile</h2>\r\n            </div>\r\n          </template>\r\n          <div class=\"card-content\">\r\n            <div class=\"user-info\">\r\n              <p><strong>Username:</strong> {{ user?.username }}</p>\r\n              <p><strong>Email:</strong> {{ user?.email }}</p>\r\n              <p><strong>Role:</strong> {{ user?.role }}</p>\r\n            </div>\r\n            <el-button type=\"primary\" @click=\"$router.push('/profile')\">\r\n              View Profile\r\n            </el-button>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n    \r\n    <!-- Recent Students -->\r\n    <el-card class=\"mt-20\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <h2>Recent Students</h2>\r\n        </div>\r\n      </template>\r\n      <el-table :data=\"recentStudents\" v-loading=\"loading\" style=\"width: 100%\">\r\n        <el-table-column prop=\"student_id\" label=\"Student ID\" width=\"120\" />\r\n        <el-table-column prop=\"name\" label=\"Name\" />\r\n        <el-table-column prop=\"class_name\" label=\"Class\" />\r\n        <el-table-column prop=\"email\" label=\"Email\" />\r\n        <el-table-column label=\"Actions\" width=\"150\">\r\n          <template #default=\"scope\">\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"primary\" \r\n              @click=\"$router.push(`/students/${scope.row.id}`)\"\r\n            >\r\n              View\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Dashboard',\r\n  setup() {\r\n    const store = useStore()\r\n    const loading = ref(false)\r\n    const recentStudents = ref([])\r\n    \r\n    // Get user from store\r\n    const user = computed(() => store.getters['auth/user'])\r\n    \r\n    // Computed properties for statistics\r\n    const studentCount = ref(0)\r\n    const classCount = ref(0)\r\n    \r\n    // Fetch dashboard data\r\n    const fetchDashboardData = async () => {\r\n      loading.value = true\r\n      try {\r\n        // Fetch classes\r\n        await store.dispatch('classes/fetchClasses')\r\n        classCount.value = store.getters['classes/allClasses'].length\r\n        \r\n        // Fetch recent students (first page with small page size)\r\n        const params = {\r\n          page: 1,\r\n          page_size: 5\r\n        }\r\n        const response = await store.dispatch('students/fetchStudents')\r\n        recentStudents.value = store.getters['students/allStudents']\r\n        studentCount.value = store.getters['students/pagination'].total\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error)\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data when component is mounted\r\n    onMounted(fetchDashboardData)\r\n    \r\n    return {\r\n      user,\r\n      loading,\r\n      studentCount,\r\n      classCount,\r\n      recentStudents\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-card {\r\n  height: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.card-header h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n}\r\n\r\n.card-content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px 0;\r\n}\r\n\r\n.stat-value {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #409EFF;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.stat-label {\r\n  font-size: 16px;\r\n  color: #606266;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-info {\r\n  width: 100%;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-info p {\r\n  margin: 5px 0;\r\n}\r\n</style> "],"mappings":";;AA4FA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAK,WAALA,KAAKA,CAAA,EAAG;IACN,IAAMC,KAAI,GAAIH,QAAQ,CAAC;IACvB,IAAMI,OAAM,GAAIP,GAAG,CAAC,KAAK;IACzB,IAAMQ,cAAa,GAAIR,GAAG,CAAC,EAAE;;IAE7B;IACA,IAAMS,IAAG,GAAIR,QAAQ,CAAC;MAAA,OAAMK,KAAK,CAACI,OAAO,CAAC,WAAW,CAAC;IAAA;;IAEtD;IACA,IAAMC,YAAW,GAAIX,GAAG,CAAC,CAAC;IAC1B,IAAMY,UAAS,GAAIZ,GAAG,CAAC,CAAC;;IAExB;IACA,IAAMa,kBAAiB;MAAA,IAAAC,IAAA,GAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAI,SAAAC,QAAA;QAAA,IAAAC,MAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACzBlB,OAAO,CAACmB,KAAI,GAAI,IAAG;cAAAH,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGXnB,KAAK,CAACqB,QAAQ,CAAC,sBAAsB;YAAA;cAC3Cf,UAAU,CAACc,KAAI,GAAIpB,KAAK,CAACI,OAAO,CAAC,oBAAoB,CAAC,CAACkB,MAAK;;cAE5D;cACMT,MAAK,GAAI;gBACbU,IAAI,EAAE,CAAC;gBACPC,SAAS,EAAE;cACb;cAAAP,QAAA,CAAAE,IAAA;cAAA,OACuBnB,KAAK,CAACqB,QAAQ,CAAC,wBAAwB;YAAA;cAAxDP,QAAO,GAAAG,QAAA,CAAAQ,IAAA;cACbvB,cAAc,CAACkB,KAAI,GAAIpB,KAAK,CAACI,OAAO,CAAC,sBAAsB;cAC3DC,YAAY,CAACe,KAAI,GAAIpB,KAAK,CAACI,OAAO,CAAC,qBAAqB,CAAC,CAACsB,KAAI;cAAAT,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;cAE9DW,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAAZ,QAAA,CAAAU,EAAO;YAAA;cAAAV,QAAA,CAAAC,IAAA;cAErDjB,OAAO,CAACmB,KAAI,GAAI,KAAI;cAAA,OAAAH,QAAA,CAAAa,MAAA;YAAA;YAAA;cAAA,OAAAb,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAAnB,OAAA;MAAA,CAExB;MAAA,gBApBML,kBAAiBA,CAAA;QAAA,OAAAC,IAAA,CAAAwB,KAAA,OAAAC,SAAA;MAAA;IAAA,GAoBvB;;IAEA;IACArC,SAAS,CAACW,kBAAkB;IAE5B,OAAO;MACLJ,IAAI,EAAJA,IAAI;MACJF,OAAO,EAAPA,OAAO;MACPI,YAAY,EAAZA,YAAY;MACZC,UAAU,EAAVA,UAAU;MACVJ,cAAa,EAAbA;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}