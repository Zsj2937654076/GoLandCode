{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"class-form-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"page-header\"\n};\nvar _hoisted_3 = {\n  \"class\": \"page-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h1\", _hoisted_3, _toDisplayString($props.isEdit ? '编辑班级' : '添加班级'), 1 /* TEXT */), _createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$router.push('/classes');\n    })\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[4] || (_cache[4] = [_createTextVNode(\" 返回班级列表 \")]);\n    }),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_card, null, {\n    \"default\": _withCtx(function () {\n      return [_withDirectives((_openBlock(), _createBlock(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-position\": \"top\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" Class Name \"), _createVNode(_component_el_form_item, {\n            label: \"班级名称\",\n            prop: \"name\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.name,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.form.name = $event;\n                }),\n                placeholder: \"请输入班级名称\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" Description \"), _createVNode(_component_el_form_item, {\n            label: \"描述\",\n            prop: \"description\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.description,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.form.description = $event;\n                }),\n                placeholder: \"请输入班级描述\",\n                type: \"textarea\",\n                rows: 4\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" Form Actions \"), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.submitForm,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return [_createTextVNode(_toDisplayString($props.isEdit ? '更新班级' : '创建班级'), 1 /* TEXT */)];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n                onClick: $setup.resetForm\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[5] || (_cache[5] = [_createTextVNode(\"重置\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                onClick: _cache[3] || (_cache[3] = function ($event) {\n                  return _ctx.$router.push('/classes');\n                }),\n                type: \"info\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[6] || (_cache[6] = [_createTextVNode(\"取消\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])), [[_directive_loading, $setup.loading]])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","$props","isEdit","_createVNode","_component_el_button","onClick","_cache","$event","_ctx","$router","push","_withCtx","_createTextVNode","_","_component_el_card","_createBlock","_component_el_form","ref","model","$setup","form","rules","_createCommentVNode","_component_el_form_item","label","prop","_component_el_input","modelValue","name","placeholder","description","type","rows","submitForm","loading","submitting","resetForm"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\classes\\ClassForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"class-form-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">{{ isEdit ? '编辑班级' : '添加班级' }}</h1>\r\n      <el-button @click=\"$router.push('/classes')\">\r\n        返回班级列表\r\n      </el-button>\r\n    </div>\r\n    \r\n    <el-card>\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- Class Name -->\r\n        <el-form-item label=\"班级名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"请输入班级名称\" />\r\n        </el-form-item>\r\n        \r\n        <!-- Description -->\r\n        <el-form-item label=\"描述\" prop=\"description\">\r\n          <el-input \r\n            v-model=\"form.description\" \r\n            placeholder=\"请输入班级描述\" \r\n            type=\"textarea\" \r\n            :rows=\"4\" \r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- Form Actions -->\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">\r\n            {{ isEdit ? '更新班级' : '创建班级' }}\r\n          </el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n          <el-button @click=\"$router.push('/classes')\" type=\"info\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'ClassForm',\r\n  props: {\r\n    id: {\r\n      type: Number,\r\n      required: false\r\n    },\r\n    isEdit: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const formRef = ref(null)\r\n    const loading = ref(false)\r\n    const submitting = ref(false)\r\n    \r\n    // Form data\r\n    const form = reactive({\r\n      id: null,\r\n      name: '',\r\n      description: ''\r\n    })\r\n    \r\n    // Form validation rules\r\n    const rules = {\r\n      name: [\r\n        { required: true, message: 'Please enter class name', trigger: 'blur' },\r\n        { min: 2, max: 100, message: 'Length should be 2 to 100 characters', trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // Fetch class data if in edit mode\r\n    const fetchClassData = async () => {\r\n      if (!props.isEdit || !props.id) return\r\n      \r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('classes/fetchClass', props.id)\r\n        const classData = store.getters['classes/currentClass']\r\n        \r\n        if (classData) {\r\n          // Populate form with class data\r\n          form.id = classData.id\r\n          form.name = classData.name\r\n          form.description = classData.description || ''\r\n        } else {\r\n          ElMessage.error('Class not found')\r\n          router.push('/classes')\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching class:', error)\r\n        ElMessage.error('Failed to load class data')\r\n        router.push('/classes')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Submit form\r\n    const submitForm = () => {\r\n      formRef.value.validate(async valid => {\r\n        if (!valid) return\r\n        \r\n        submitting.value = true\r\n        try {\r\n          if (props.isEdit) {\r\n            // Update existing class\r\n            await store.dispatch('classes/updateClass', { ...form })\r\n            ElMessage.success('Class updated successfully')\r\n          } else {\r\n            // Create new class\r\n            await store.dispatch('classes/createClass', { ...form })\r\n            ElMessage.success('Class created successfully')\r\n          }\r\n          router.push('/classes')\r\n        } catch (error) {\r\n          console.error('Error saving class:', error)\r\n          ElMessage.error('Failed to save class')\r\n        } finally {\r\n          submitting.value = false\r\n        }\r\n      })\r\n    }\r\n    \r\n    // Reset form\r\n    const resetForm = () => {\r\n      if (props.isEdit) {\r\n        // If editing, reset to original values\r\n        fetchClassData()\r\n      } else {\r\n        // If creating new, clear all fields\r\n        formRef.value.resetFields()\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(() => {\r\n      if (props.isEdit) {\r\n        fetchClassData()\r\n      }\r\n    })\r\n    \r\n    return {\r\n      formRef,\r\n      form,\r\n      rules,\r\n      loading,\r\n      submitting,\r\n      submitForm,\r\n      resetForm\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}