{"ast":null,"code":"import _regeneratorRuntime from \"E:/GoLand20240404/Project/student_management/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"E:/GoLand20240404/Project/student_management/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'StudentList',\n  setup: function setup() {\n    var store = useStore();\n    var loading = ref(false);\n\n    // Get students from store\n    var students = computed(function () {\n      return store.getters['students/allStudents'];\n    });\n    var pagination = computed(function () {\n      return store.getters['students/pagination'];\n    });\n    var classOptions = computed(function () {\n      return store.getters['classes/classOptions'];\n    });\n\n    // Filter state\n    var filters = reactive({\n      classId: '',\n      studentId: '',\n      name: ''\n    });\n\n    // Delete dialog state\n    var deleteDialog = reactive({\n      visible: false,\n      student: null,\n      loading: false\n    });\n\n    // Fetch students and classes\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              loading.value = true;\n              _context.prev = 1;\n              _context.next = 4;\n              return Promise.all([store.dispatch('students/fetchStudents'), store.dispatch('classes/fetchClasses')]);\n            case 4:\n              _context.next = 10;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error('Error fetching data:', _context.t0);\n              ElMessage.error('Failed to load data');\n            case 10:\n              _context.prev = 10;\n              loading.value = false;\n              return _context.finish(10);\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 6, 10, 13]]);\n      }));\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    // Handle filter changes\n    var handleFilterChange = function handleFilterChange() {\n      store.dispatch('students/setFilters', {\n        classId: filters.classId,\n        studentId: filters.studentId,\n        name: filters.name\n      });\n    };\n\n    // Reset filters\n    var resetFilters = function resetFilters() {\n      filters.classId = '';\n      filters.studentId = '';\n      filters.name = '';\n      handleFilterChange();\n    };\n\n    // Pagination handlers\n    var handleSizeChange = function handleSizeChange(size) {\n      store.dispatch('students/setPagination', {\n        pageSize: size\n      });\n    };\n    var handleCurrentChange = function handleCurrentChange(page) {\n      store.dispatch('students/setPage', page);\n    };\n\n    // Delete student\n    var confirmDelete = function confirmDelete(student) {\n      deleteDialog.student = student;\n      deleteDialog.visible = true;\n    };\n    var deleteStudent = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (deleteDialog.student) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\");\n            case 2:\n              deleteDialog.loading = true;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return store.dispatch('students/deleteStudent', deleteDialog.student.id);\n            case 6:\n              ElMessage.success('Student deleted successfully');\n              deleteDialog.visible = false;\n              _context2.next = 14;\n              break;\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.error('Error deleting student:', _context2.t0);\n              ElMessage.error('Failed to delete student');\n            case 14:\n              _context2.prev = 14;\n              deleteDialog.loading = false;\n              return _context2.finish(14);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[3, 10, 14, 17]]);\n      }));\n      return function deleteStudent() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    // Fetch data on component mount\n    onMounted(fetchData);\n    return {\n      students: students,\n      loading: loading,\n      pagination: pagination,\n      filters: filters,\n      classOptions: classOptions,\n      deleteDialog: deleteDialog,\n      handleFilterChange: handleFilterChange,\n      resetFilters: resetFilters,\n      handleSizeChange: handleSizeChange,\n      handleCurrentChange: handleCurrentChange,\n      confirmDelete: confirmDelete,\n      deleteStudent: deleteStudent\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","ElMessage","name","setup","store","loading","students","getters","pagination","classOptions","filters","classId","studentId","deleteDialog","visible","student","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","value","Promise","all","dispatch","t0","console","error","finish","stop","apply","arguments","handleFilterChange","resetFilters","handleSizeChange","size","pageSize","handleCurrentChange","page","confirmDelete","deleteStudent","_ref2","_callee2","_callee2$","_context2","abrupt","id","success"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\students\\StudentList.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-list-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Students</h1>\r\n      <el-button type=\"primary\" @click=\"$router.push('/students/new')\">\r\n        Add New Student\r\n      </el-button>\r\n    </div>\r\n    \r\n    <!-- Filter Form -->\r\n    <el-card class=\"filter-card\">\r\n      <el-form :inline=\"true\" :model=\"filters\" class=\"filter-container\">\r\n        <el-form-item label=\"Class\">\r\n          <el-select \r\n            v-model=\"filters.classId\" \r\n            placeholder=\"Select Class\" \r\n            clearable\r\n            @change=\"handleFilterChange\"\r\n          >\r\n            <el-option \r\n              v-for=\"option in classOptions\" \r\n              :key=\"option.value\" \r\n              :label=\"option.label\" \r\n              :value=\"option.value\" \r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Student ID\">\r\n          <el-input \r\n            v-model=\"filters.studentId\" \r\n            placeholder=\"Search by ID\" \r\n            clearable\r\n            @input=\"handleFilterChange\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"Name\">\r\n          <el-input \r\n            v-model=\"filters.name\" \r\n            placeholder=\"Search by name\" \r\n            clearable\r\n            @input=\"handleFilterChange\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleFilterChange\">Search</el-button>\r\n          <el-button @click=\"resetFilters\">Reset</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n    \r\n    <!-- Students Table -->\r\n    <el-card class=\"mt-20\">\r\n      <el-table \r\n        :data=\"students\" \r\n        v-loading=\"loading\" \r\n        style=\"width: 100%\"\r\n        border\r\n      >\r\n        <el-table-column prop=\"student_id\" label=\"Student ID\" width=\"120\" sortable />\r\n        <el-table-column prop=\"name\" label=\"Name\" sortable />\r\n        <el-table-column prop=\"class_name\" label=\"Class\" sortable />\r\n        <el-table-column prop=\"email\" label=\"Email\" />\r\n        <el-table-column prop=\"phone\" label=\"Phone\" width=\"150\" />\r\n        <el-table-column label=\"Actions\" width=\"200\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"primary\" \r\n              @click=\"$router.push(`/students/${scope.row.id}`)\"\r\n            >\r\n              View\r\n            </el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"warning\" \r\n              @click=\"$router.push(`/students/${scope.row.id}/edit`)\"\r\n            >\r\n              Edit\r\n            </el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"confirmDelete(scope.row)\"\r\n            >\r\n              Delete\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <!-- Empty state -->\r\n      <el-empty \r\n        v-if=\"students.length === 0 && !loading\" \r\n        description=\"No students found\"\r\n      />\r\n      \r\n      <!-- Pagination -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          v-if=\"pagination.total > 0\"\r\n          background\r\n          layout=\"total, sizes, prev, pager, next\"\r\n          :total=\"pagination.total\"\r\n          :page-size=\"pagination.pageSize\"\r\n          :current-page=\"pagination.page\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n    \r\n    <!-- Delete Confirmation Dialog -->\r\n    <el-dialog\r\n      v-model=\"deleteDialog.visible\"\r\n      title=\"Confirm Delete\"\r\n      width=\"30%\"\r\n    >\r\n      <span>Are you sure you want to delete student \"{{ deleteDialog.student?.name }}\"?</span>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"deleteDialog.visible = false\">Cancel</el-button>\r\n          <el-button type=\"danger\" @click=\"deleteStudent\" :loading=\"deleteDialog.loading\">\r\n            Delete\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'StudentList',\r\n  setup() {\r\n    const store = useStore()\r\n    const loading = ref(false)\r\n    \r\n    // Get students from store\r\n    const students = computed(() => store.getters['students/allStudents'])\r\n    const pagination = computed(() => store.getters['students/pagination'])\r\n    const classOptions = computed(() => store.getters['classes/classOptions'])\r\n    \r\n    // Filter state\r\n    const filters = reactive({\r\n      classId: '',\r\n      studentId: '',\r\n      name: ''\r\n    })\r\n    \r\n    // Delete dialog state\r\n    const deleteDialog = reactive({\r\n      visible: false,\r\n      student: null,\r\n      loading: false\r\n    })\r\n    \r\n    // Fetch students and classes\r\n    const fetchData = async () => {\r\n      loading.value = true\r\n      try {\r\n        await Promise.all([\r\n          store.dispatch('students/fetchStudents'),\r\n          store.dispatch('classes/fetchClasses')\r\n        ])\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error)\r\n        ElMessage.error('Failed to load data')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Handle filter changes\r\n    const handleFilterChange = () => {\r\n      store.dispatch('students/setFilters', {\r\n        classId: filters.classId,\r\n        studentId: filters.studentId,\r\n        name: filters.name\r\n      })\r\n    }\r\n    \r\n    // Reset filters\r\n    const resetFilters = () => {\r\n      filters.classId = ''\r\n      filters.studentId = ''\r\n      filters.name = ''\r\n      handleFilterChange()\r\n    }\r\n    \r\n    // Pagination handlers\r\n    const handleSizeChange = (size) => {\r\n      store.dispatch('students/setPagination', { pageSize: size })\r\n    }\r\n    \r\n    const handleCurrentChange = (page) => {\r\n      store.dispatch('students/setPage', page)\r\n    }\r\n    \r\n    // Delete student\r\n    const confirmDelete = (student) => {\r\n      deleteDialog.student = student\r\n      deleteDialog.visible = true\r\n    }\r\n    \r\n    const deleteStudent = async () => {\r\n      if (!deleteDialog.student) return\r\n      \r\n      deleteDialog.loading = true\r\n      try {\r\n        await store.dispatch('students/deleteStudent', deleteDialog.student.id)\r\n        ElMessage.success('Student deleted successfully')\r\n        deleteDialog.visible = false\r\n      } catch (error) {\r\n        console.error('Error deleting student:', error)\r\n        ElMessage.error('Failed to delete student')\r\n      } finally {\r\n        deleteDialog.loading = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(fetchData)\r\n    \r\n    return {\r\n      students,\r\n      loading,\r\n      pagination,\r\n      filters,\r\n      classOptions,\r\n      deleteDialog,\r\n      handleFilterChange,\r\n      resetFilters,\r\n      handleSizeChange,\r\n      handleCurrentChange,\r\n      confirmDelete,\r\n      deleteStudent\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}