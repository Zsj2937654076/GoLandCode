{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'ClassList',\n  setup() {\n    const store = useStore();\n    const loading = ref(false);\n\n    // Get classes from store\n    const classes = computed(() => store.getters['classes/allClasses']);\n\n    // Delete dialog state\n    const deleteDialog = reactive({\n      visible: false,\n      class: null,\n      loading: false\n    });\n\n    // Fetch classes\n    const fetchClasses = async () => {\n      loading.value = true;\n      try {\n        await store.dispatch('classes/fetchClasses');\n      } catch (error) {\n        console.error('Error fetching classes:', error);\n        ElMessage.error('Failed to load classes');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Delete class\n    const confirmDelete = classData => {\n      deleteDialog.class = classData;\n      deleteDialog.visible = true;\n    };\n    const deleteClass = async () => {\n      if (!deleteDialog.class) return;\n\n      // Check if class has students\n      if (deleteDialog.class.student_count > 0) {\n        ElMessage.error('Cannot delete a class that has students');\n        return;\n      }\n      deleteDialog.loading = true;\n      try {\n        await store.dispatch('classes/deleteClass', deleteDialog.class.id);\n        ElMessage.success('Class deleted successfully');\n        deleteDialog.visible = false;\n      } catch (error) {\n        console.error('Error deleting class:', error);\n        if (error.response && error.response.status === 409) {\n          ElMessage.error('Cannot delete a class that has associated students');\n        } else {\n          ElMessage.error('Failed to delete class');\n        }\n      } finally {\n        deleteDialog.loading = false;\n      }\n    };\n\n    // Fetch data on component mount\n    onMounted(fetchClasses);\n    return {\n      classes,\n      loading,\n      deleteDialog,\n      confirmDelete,\n      deleteClass\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","ElMessage","name","setup","store","loading","classes","getters","deleteDialog","visible","class","fetchClasses","value","dispatch","error","console","confirmDelete","classData","deleteClass","student_count","id","success","response","status"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\classes\\ClassList.vue"],"sourcesContent":["<template>\r\n  <div class=\"class-list-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Classes</h1>\r\n      <el-button type=\"primary\" @click=\"$router.push('/classes/new')\">\r\n        Add New Class\r\n      </el-button>\r\n    </div>\r\n    \r\n    <!-- Classes Table -->\r\n    <el-card>\r\n      <el-table \r\n        :data=\"classes\" \r\n        v-loading=\"loading\" \r\n        style=\"width: 100%\"\r\n        border\r\n      >\r\n        <el-table-column prop=\"name\" label=\"Class Name\" sortable />\r\n        <el-table-column prop=\"description\" label=\"Description\" show-overflow-tooltip />\r\n        <el-table-column prop=\"student_count\" label=\"Students\" width=\"100\" sortable />\r\n        <el-table-column label=\"Actions\" width=\"250\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"primary\" \r\n              @click=\"$router.push(`/classes/${scope.row.id}`)\"\r\n            >\r\n              View\r\n            </el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"warning\" \r\n              @click=\"$router.push(`/classes/${scope.row.id}/edit`)\"\r\n            >\r\n              Edit\r\n            </el-button>\r\n            <el-button \r\n              size=\"small\" \r\n              type=\"danger\" \r\n              @click=\"confirmDelete(scope.row)\"\r\n            >\r\n              Delete\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      \r\n      <!-- Empty state -->\r\n      <el-empty \r\n        v-if=\"classes.length === 0 && !loading\" \r\n        description=\"No classes found\"\r\n      >\r\n        <el-button type=\"primary\" @click=\"$router.push('/classes/new')\">\r\n          Create First Class\r\n        </el-button>\r\n      </el-empty>\r\n    </el-card>\r\n    \r\n    <!-- Delete Confirmation Dialog -->\r\n    <el-dialog\r\n      v-model=\"deleteDialog.visible\"\r\n      title=\"Confirm Delete\"\r\n      width=\"30%\"\r\n    >\r\n      <span>\r\n        Are you sure you want to delete class \"{{ deleteDialog.class?.name }}\"?\r\n        <br><br>\r\n        <strong v-if=\"deleteDialog.class?.student_count > 0\" class=\"text-danger\">\r\n          Warning: This class has {{ deleteDialog.class.student_count }} students. \r\n          You cannot delete a class that has students.\r\n        </strong>\r\n      </span>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"deleteDialog.visible = false\">Cancel</el-button>\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"deleteClass\" \r\n            :loading=\"deleteDialog.loading\"\r\n            :disabled=\"deleteDialog.class?.student_count > 0\"\r\n          >\r\n            Delete\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'ClassList',\r\n  setup() {\r\n    const store = useStore()\r\n    const loading = ref(false)\r\n    \r\n    // Get classes from store\r\n    const classes = computed(() => store.getters['classes/allClasses'])\r\n    \r\n    // Delete dialog state\r\n    const deleteDialog = reactive({\r\n      visible: false,\r\n      class: null,\r\n      loading: false\r\n    })\r\n    \r\n    // Fetch classes\r\n    const fetchClasses = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('classes/fetchClasses')\r\n      } catch (error) {\r\n        console.error('Error fetching classes:', error)\r\n        ElMessage.error('Failed to load classes')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Delete class\r\n    const confirmDelete = (classData) => {\r\n      deleteDialog.class = classData\r\n      deleteDialog.visible = true\r\n    }\r\n    \r\n    const deleteClass = async () => {\r\n      if (!deleteDialog.class) return\r\n      \r\n      // Check if class has students\r\n      if (deleteDialog.class.student_count > 0) {\r\n        ElMessage.error('Cannot delete a class that has students')\r\n        return\r\n      }\r\n      \r\n      deleteDialog.loading = true\r\n      try {\r\n        await store.dispatch('classes/deleteClass', deleteDialog.class.id)\r\n        ElMessage.success('Class deleted successfully')\r\n        deleteDialog.visible = false\r\n      } catch (error) {\r\n        console.error('Error deleting class:', error)\r\n        if (error.response && error.response.status === 409) {\r\n          ElMessage.error('Cannot delete a class that has associated students')\r\n        } else {\r\n          ElMessage.error('Failed to delete class')\r\n        }\r\n      } finally {\r\n        deleteDialog.loading = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(fetchClasses)\r\n    \r\n    return {\r\n      classes,\r\n      loading,\r\n      deleteDialog,\r\n      confirmDelete,\r\n      deleteClass\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.text-danger {\r\n  color: #F56C6C;\r\n}\r\n</style> "],"mappings":"AA0FA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACvD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,OAAM,GAAIT,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMU,OAAM,GAAIR,QAAQ,CAAC,MAAMM,KAAK,CAACG,OAAO,CAAC,oBAAoB,CAAC;;IAElE;IACA,MAAMC,YAAW,GAAIX,QAAQ,CAAC;MAC5BY,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXL,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMM,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/BN,OAAO,CAACO,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMR,KAAK,CAACS,QAAQ,CAAC,sBAAsB;MAC7C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9Cb,SAAS,CAACa,KAAK,CAAC,wBAAwB;MAC1C,UAAU;QACRT,OAAO,CAACO,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMI,aAAY,GAAKC,SAAS,IAAK;MACnCT,YAAY,CAACE,KAAI,GAAIO,SAAQ;MAC7BT,YAAY,CAACC,OAAM,GAAI,IAAG;IAC5B;IAEA,MAAMS,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9B,IAAI,CAACV,YAAY,CAACE,KAAK,EAAE;;MAEzB;MACA,IAAIF,YAAY,CAACE,KAAK,CAACS,aAAY,GAAI,CAAC,EAAE;QACxClB,SAAS,CAACa,KAAK,CAAC,yCAAyC;QACzD;MACF;MAEAN,YAAY,CAACH,OAAM,GAAI,IAAG;MAC1B,IAAI;QACF,MAAMD,KAAK,CAACS,QAAQ,CAAC,qBAAqB,EAAEL,YAAY,CAACE,KAAK,CAACU,EAAE;QACjEnB,SAAS,CAACoB,OAAO,CAAC,4BAA4B;QAC9Cb,YAAY,CAACC,OAAM,GAAI,KAAI;MAC7B,EAAE,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK;QAC5C,IAAIA,KAAK,CAACQ,QAAO,IAAKR,KAAK,CAACQ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACnDtB,SAAS,CAACa,KAAK,CAAC,oDAAoD;QACtE,OAAO;UACLb,SAAS,CAACa,KAAK,CAAC,wBAAwB;QAC1C;MACF,UAAU;QACRN,YAAY,CAACH,OAAM,GAAI,KAAI;MAC7B;IACF;;IAEA;IACAN,SAAS,CAACY,YAAY;IAEtB,OAAO;MACLL,OAAO;MACPD,OAAO;MACPG,YAAY;MACZQ,aAAa;MACbE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}