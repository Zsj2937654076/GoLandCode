{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'StudentDetail',\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const router = useRouter();\n    const loading = ref(false);\n\n    // Delete dialog state\n    const deleteDialog = reactive({\n      visible: false,\n      loading: false\n    });\n\n    // Get student from store\n    const student = computed(() => store.getters['students/currentStudent']);\n\n    // Format date\n    const formatDate = dateString => {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    };\n\n    // Fetch student data\n    const fetchStudentData = async () => {\n      loading.value = true;\n      try {\n        await store.dispatch('students/fetchStudent', Number(props.id));\n      } catch (error) {\n        console.error('Error fetching student:', error);\n        ElMessage.error('Failed to load student data');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Delete student\n    const confirmDelete = () => {\n      deleteDialog.visible = true;\n    };\n    const deleteStudent = async () => {\n      deleteDialog.loading = true;\n      try {\n        await store.dispatch('students/deleteStudent', Number(props.id));\n        ElMessage.success('Student deleted successfully');\n        router.push('/students');\n      } catch (error) {\n        console.error('Error deleting student:', error);\n        ElMessage.error('Failed to delete student');\n      } finally {\n        deleteDialog.loading = false;\n        deleteDialog.visible = false;\n      }\n    };\n\n    // Fetch data on component mount\n    onMounted(fetchStudentData);\n    return {\n      student,\n      loading,\n      deleteDialog,\n      formatDate,\n      confirmDelete,\n      deleteStudent\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","useRouter","ElMessage","name","props","id","type","Number","String","required","setup","store","router","loading","deleteDialog","visible","student","getters","formatDate","dateString","date","Date","toLocaleString","fetchStudentData","value","dispatch","error","console","confirmDelete","deleteStudent","success","push"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\students\\StudentDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"student-detail-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Student Details</h1>\r\n      <div class=\"action-buttons\">\r\n        <el-button @click=\"$router.push('/students')\">\r\n          Back to Students\r\n        </el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"$router.push(`/students/${id}/edit`)\"\r\n          v-if=\"student\"\r\n        >\r\n          Edit Student\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    \r\n    <el-card v-loading=\"loading\">\r\n      <template v-if=\"student\">\r\n        <el-descriptions :column=\"2\" border>\r\n          <el-descriptions-item label=\"Student ID\">\r\n            {{ student.student_id }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Name\">\r\n            {{ student.name }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Class\">\r\n            {{ student.class_name }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Email\">\r\n            {{ student.email || 'N/A' }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Phone\">\r\n            {{ student.phone || 'N/A' }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Created At\">\r\n            {{ formatDate(student.created_at) }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Address\" :span=\"2\">\r\n            {{ student.address || 'N/A' }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n        \r\n        <div class=\"action-buttons mt-20\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"confirmDelete\"\r\n          >\r\n            Delete Student\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-empty \r\n        v-else-if=\"!loading\" \r\n        description=\"Student not found\"\r\n      />\r\n    </el-card>\r\n    \r\n    <!-- Delete Confirmation Dialog -->\r\n    <el-dialog\r\n      v-model=\"deleteDialog.visible\"\r\n      title=\"Confirm Delete\"\r\n      width=\"30%\"\r\n    >\r\n      <span>Are you sure you want to delete this student?</span>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"deleteDialog.visible = false\">Cancel</el-button>\r\n          <el-button type=\"danger\" @click=\"deleteStudent\" :loading=\"deleteDialog.loading\">\r\n            Delete\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'StudentDetail',\r\n  props: {\r\n    id: {\r\n      type: [Number, String],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    \r\n    // Delete dialog state\r\n    const deleteDialog = reactive({\r\n      visible: false,\r\n      loading: false\r\n    })\r\n    \r\n    // Get student from store\r\n    const student = computed(() => store.getters['students/currentStudent'])\r\n    \r\n    // Format date\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A'\r\n      const date = new Date(dateString)\r\n      return date.toLocaleString()\r\n    }\r\n    \r\n    // Fetch student data\r\n    const fetchStudentData = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('students/fetchStudent', Number(props.id))\r\n      } catch (error) {\r\n        console.error('Error fetching student:', error)\r\n        ElMessage.error('Failed to load student data')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Delete student\r\n    const confirmDelete = () => {\r\n      deleteDialog.visible = true\r\n    }\r\n    \r\n    const deleteStudent = async () => {\r\n      deleteDialog.loading = true\r\n      try {\r\n        await store.dispatch('students/deleteStudent', Number(props.id))\r\n        ElMessage.success('Student deleted successfully')\r\n        router.push('/students')\r\n      } catch (error) {\r\n        console.error('Error deleting student:', error)\r\n        ElMessage.error('Failed to delete student')\r\n      } finally {\r\n        deleteDialog.loading = false\r\n        deleteDialog.visible = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(fetchStudentData)\r\n    \r\n    return {\r\n      student,\r\n      loading,\r\n      deleteDialog,\r\n      formatDate,\r\n      confirmDelete,\r\n      deleteStudent\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n</style> "],"mappings":"AAsFA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACvD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACN,KAAK,EAAE;IACX,MAAMO,KAAI,GAAIX,QAAQ,CAAC;IACvB,MAAMY,MAAK,GAAIX,SAAS,CAAC;IACzB,MAAMY,OAAM,GAAIjB,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMkB,YAAW,GAAIjB,QAAQ,CAAC;MAC5BkB,OAAO,EAAE,KAAK;MACdF,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMG,OAAM,GAAIlB,QAAQ,CAAC,MAAMa,KAAK,CAACM,OAAO,CAAC,yBAAyB,CAAC;;IAEvE;IACA,MAAMC,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,KAAI;MAC5B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC;IAC7B;;IAEA;IACA,MAAMC,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnCV,OAAO,CAACW,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMb,KAAK,CAACc,QAAQ,CAAC,uBAAuB,EAAElB,MAAM,CAACH,KAAK,CAACC,EAAE,CAAC;MAChE,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9CxB,SAAS,CAACwB,KAAK,CAAC,6BAA6B;MAC/C,UAAU;QACRb,OAAO,CAACW,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMI,aAAY,GAAIA,CAAA,KAAM;MAC1Bd,YAAY,CAACC,OAAM,GAAI,IAAG;IAC5B;IAEA,MAAMc,aAAY,GAAI,MAAAA,CAAA,KAAY;MAChCf,YAAY,CAACD,OAAM,GAAI,IAAG;MAC1B,IAAI;QACF,MAAMF,KAAK,CAACc,QAAQ,CAAC,wBAAwB,EAAElB,MAAM,CAACH,KAAK,CAACC,EAAE,CAAC;QAC/DH,SAAS,CAAC4B,OAAO,CAAC,8BAA8B;QAChDlB,MAAM,CAACmB,IAAI,CAAC,WAAW;MACzB,EAAE,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9CxB,SAAS,CAACwB,KAAK,CAAC,0BAA0B;MAC5C,UAAU;QACRZ,YAAY,CAACD,OAAM,GAAI,KAAI;QAC3BC,YAAY,CAACC,OAAM,GAAI,KAAI;MAC7B;IACF;;IAEA;IACAhB,SAAS,CAACwB,gBAAgB;IAE1B,OAAO;MACLP,OAAO;MACPH,OAAO;MACPC,YAAY;MACZI,UAAU;MACVU,aAAa;MACbC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}