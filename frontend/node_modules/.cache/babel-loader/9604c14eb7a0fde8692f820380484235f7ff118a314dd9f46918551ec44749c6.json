{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\n\n// Lazy load components\nconst Login = () => import('../views/auth/Login.vue');\nconst Dashboard = () => import('../views/Dashboard.vue');\nconst StudentList = () => import('../views/students/StudentList.vue');\nconst StudentForm = () => import('../views/students/StudentForm.vue');\nconst StudentDetail = () => import('../views/students/StudentDetail.vue');\nconst ClassList = () => import('../views/classes/ClassList.vue');\nconst ClassForm = () => import('../views/classes/ClassForm.vue');\nconst ClassDetail = () => import('../views/classes/ClassDetail.vue');\nconst Profile = () => import('../views/auth/Profile.vue');\nconst ChangePassword = () => import('../views/auth/ChangePassword.vue');\nconst NotFound = () => import('../views/NotFound.vue');\nconst routes = [{\n  path: '/',\n  redirect: '/dashboard'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: Dashboard\n},\n// Student routes\n{\n  path: '/students',\n  name: 'StudentList',\n  component: StudentList\n}, {\n  path: '/students/new',\n  name: 'CreateStudent',\n  component: StudentForm\n}, {\n  path: '/students/:id',\n  name: 'StudentDetail',\n  component: StudentDetail,\n  props: true\n}, {\n  path: '/students/:id/edit',\n  name: 'EditStudent',\n  component: StudentForm,\n  props: route => ({\n    id: parseInt(route.params.id),\n    isEdit: true\n  })\n},\n// Class routes\n{\n  path: '/classes',\n  name: 'ClassList',\n  component: ClassList\n}, {\n  path: '/classes/new',\n  name: 'CreateClass',\n  component: ClassForm\n}, {\n  path: '/classes/:id',\n  name: 'ClassDetail',\n  component: ClassDetail,\n  props: true\n}, {\n  path: '/classes/:id/edit',\n  name: 'EditClass',\n  component: ClassForm,\n  props: route => ({\n    id: parseInt(route.params.id),\n    isEdit: true\n  })\n},\n// User routes\n{\n  path: '/profile',\n  name: 'Profile',\n  component: Profile\n}, {\n  path: '/change-password',\n  name: 'ChangePassword',\n  component: ChangePassword\n},\n// 404 route\n{\n  path: '/:pathMatch(.*)*',\n  name: 'NotFound',\n  component: NotFound\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// Navigation guard to check authentication\nrouter.beforeEach((to, from, next) => {\n  // Check if the route requires authentication\n  if (to.matched.some(record => record.meta.requiresAuth !== false)) {\n    // This route requires auth, check if logged in\n    if (!store.getters['auth/isAuthenticated']) {\n      // Not logged in, redirect to login page\n      next({\n        name: 'Login'\n      });\n    } else {\n      next(); // Logged in, proceed to route\n    }\n  } else {\n    next(); // No auth required, proceed to route\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","Login","Dashboard","StudentList","StudentForm","StudentDetail","ClassList","ClassForm","ClassDetail","Profile","ChangePassword","NotFound","routes","path","redirect","name","component","meta","requiresAuth","props","route","id","parseInt","params","isEdit","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","getters"],"sources":["E:/GoLand20240404/Project/student_management/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport store from '../store'\r\n\r\n// Lazy load components\r\nconst Login = () => import('../views/auth/Login.vue')\r\nconst Dashboard = () => import('../views/Dashboard.vue')\r\nconst StudentList = () => import('../views/students/StudentList.vue')\r\nconst StudentForm = () => import('../views/students/StudentForm.vue')\r\nconst StudentDetail = () => import('../views/students/StudentDetail.vue')\r\nconst ClassList = () => import('../views/classes/ClassList.vue')\r\nconst ClassForm = () => import('../views/classes/ClassForm.vue')\r\nconst ClassDetail = () => import('../views/classes/ClassDetail.vue')\r\nconst Profile = () => import('../views/auth/Profile.vue')\r\nconst ChangePassword = () => import('../views/auth/ChangePassword.vue')\r\nconst NotFound = () => import('../views/NotFound.vue')\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    redirect: '/dashboard'\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { requiresAuth: false }\r\n  },\r\n  {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    component: Dashboard\r\n  },\r\n  // Student routes\r\n  {\r\n    path: '/students',\r\n    name: 'StudentList',\r\n    component: StudentList\r\n  },\r\n  {\r\n    path: '/students/new',\r\n    name: 'CreateStudent',\r\n    component: StudentForm\r\n  },\r\n  {\r\n    path: '/students/:id',\r\n    name: 'StudentDetail',\r\n    component: StudentDetail,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/students/:id/edit',\r\n    name: 'EditStudent',\r\n    component: StudentForm,\r\n    props: route => ({ id: parseInt(route.params.id), isEdit: true })\r\n  },\r\n  // Class routes\r\n  {\r\n    path: '/classes',\r\n    name: 'ClassList',\r\n    component: ClassList\r\n  },\r\n  {\r\n    path: '/classes/new',\r\n    name: 'CreateClass',\r\n    component: ClassForm\r\n  },\r\n  {\r\n    path: '/classes/:id',\r\n    name: 'ClassDetail',\r\n    component: ClassDetail,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/classes/:id/edit',\r\n    name: 'EditClass',\r\n    component: ClassForm,\r\n    props: route => ({ id: parseInt(route.params.id), isEdit: true })\r\n  },\r\n  // User routes\r\n  {\r\n    path: '/profile',\r\n    name: 'Profile',\r\n    component: Profile\r\n  },\r\n  {\r\n    path: '/change-password',\r\n    name: 'ChangePassword',\r\n    component: ChangePassword\r\n  },\r\n  // 404 route\r\n  {\r\n    path: '/:pathMatch(.*)*',\r\n    name: 'NotFound',\r\n    component: NotFound\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// Navigation guard to check authentication\r\nrouter.beforeEach((to, from, next) => {\r\n  // Check if the route requires authentication\r\n  if (to.matched.some(record => record.meta.requiresAuth !== false)) {\r\n    // This route requires auth, check if logged in\r\n    if (!store.getters['auth/isAuthenticated']) {\r\n      // Not logged in, redirect to login page\r\n      next({ name: 'Login' })\r\n    } else {\r\n      next() // Logged in, proceed to route\r\n    }\r\n  } else {\r\n    next() // No auth required, proceed to route\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}