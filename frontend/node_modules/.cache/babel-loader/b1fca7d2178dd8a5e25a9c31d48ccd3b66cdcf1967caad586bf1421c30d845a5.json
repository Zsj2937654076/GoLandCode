{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'Profile',\n  setup() {\n    const store = useStore();\n    const loading = ref(false);\n\n    // Get user from store\n    const user = computed(() => store.getters['auth/user']);\n\n    // Fetch user profile\n    const fetchProfile = async () => {\n      if (user.value) return; // Already have user data\n\n      loading.value = true;\n      try {\n        // Get token from localStorage\n        const token = localStorage.getItem('token');\n        if (token) {\n          await store.dispatch('auth/restoreSession', token);\n        } else {\n          ElMessage.error('Not authenticated');\n        }\n      } catch (error) {\n        console.error('Error fetching profile:', error);\n        ElMessage.error('Failed to load profile');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fetch data on component mount\n    onMounted(fetchProfile);\n    return {\n      user,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","ElMessage","name","setup","store","loading","user","getters","fetchProfile","value","token","localStorage","getItem","dispatch","error","console"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\auth\\Profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h1 class=\"page-title\">User Profile</h1>\r\n    \r\n    <el-card v-loading=\"loading\">\r\n      <template v-if=\"user\">\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"Username\">\r\n            {{ user.username }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Email\">\r\n            {{ user.email }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Role\">\r\n            {{ user.role }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n        \r\n        <div class=\"action-buttons mt-20\">\r\n          <el-button \r\n            type=\"primary\" \r\n            @click=\"$router.push('/change-password')\"\r\n          >\r\n            Change Password\r\n          </el-button>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-empty \r\n        v-else-if=\"!loading\" \r\n        description=\"User profile not found\"\r\n      />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'Profile',\r\n  setup() {\r\n    const store = useStore()\r\n    const loading = ref(false)\r\n    \r\n    // Get user from store\r\n    const user = computed(() => store.getters['auth/user'])\r\n    \r\n    // Fetch user profile\r\n    const fetchProfile = async () => {\r\n      if (user.value) return // Already have user data\r\n      \r\n      loading.value = true\r\n      try {\r\n        // Get token from localStorage\r\n        const token = localStorage.getItem('token')\r\n        if (token) {\r\n          await store.dispatch('auth/restoreSession', token)\r\n        } else {\r\n          ElMessage.error('Not authenticated')\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching profile:', error)\r\n        ElMessage.error('Failed to load profile')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(fetchProfile)\r\n    \r\n    return {\r\n      user,\r\n      loading\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* Add any additional styles here */\r\n</style>\r\n "],"mappings":"AAuCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,SAAS;EACfC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIJ,QAAQ,CAAC;IACvB,MAAMK,OAAM,GAAIR,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMS,IAAG,GAAIR,QAAQ,CAAC,MAAMM,KAAK,CAACG,OAAO,CAAC,WAAW,CAAC;;IAEtD;IACA,MAAMC,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAIF,IAAI,CAACG,KAAK,EAAE,OAAK,CAAE;;MAEvBJ,OAAO,CAACI,KAAI,GAAI,IAAG;MACnB,IAAI;QACF;QACA,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC1C,IAAIF,KAAK,EAAE;UACT,MAAMN,KAAK,CAACS,QAAQ,CAAC,qBAAqB,EAAEH,KAAK;QACnD,OAAO;UACLT,SAAS,CAACa,KAAK,CAAC,mBAAmB;QACrC;MACF,EAAE,OAAOA,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK;QAC9Cb,SAAS,CAACa,KAAK,CAAC,wBAAwB;MAC1C,UAAU;QACRT,OAAO,CAACI,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACAV,SAAS,CAACS,YAAY;IAEtB,OAAO;MACLF,IAAI;MACJD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}