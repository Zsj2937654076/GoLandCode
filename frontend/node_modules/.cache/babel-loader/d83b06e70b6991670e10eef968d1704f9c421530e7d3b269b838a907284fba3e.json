{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, openBlock as _openBlock, createBlock as _createBlock, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"change-password-container\"\n};\nvar _hoisted_2 = {\n  \"class\": \"page-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_el_button = _resolveComponent(\"el-button\");\n  var _component_el_input = _resolveComponent(\"el-input\");\n  var _component_el_form_item = _resolveComponent(\"el-form-item\");\n  var _component_el_form = _resolveComponent(\"el-form\");\n  var _component_el_card = _resolveComponent(\"el-card\");\n  var _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", {\n    \"class\": \"page-title\"\n  }, \"Change Password\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = function ($event) {\n      return _ctx.$router.push('/profile');\n    })\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[5] || (_cache[5] = [_createTextVNode(\" Back to Profile \")]);\n    }),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_card, null, {\n    \"default\": _withCtx(function () {\n      return [_withDirectives((_openBlock(), _createBlock(_component_el_form, {\n        ref: \"formRef\",\n        model: $setup.form,\n        rules: $setup.rules,\n        \"label-position\": \"top\"\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createCommentVNode(\" Current Password \"), _createVNode(_component_el_form_item, {\n            label: \"Current Password\",\n            prop: \"oldPassword\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.oldPassword,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n                  return $setup.form.oldPassword = $event;\n                }),\n                placeholder: \"Enter your current password\",\n                type: \"password\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" New Password \"), _createVNode(_component_el_form_item, {\n            label: \"New Password\",\n            prop: \"newPassword\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.newPassword,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = function ($event) {\n                  return $setup.form.newPassword = $event;\n                }),\n                placeholder: \"Enter your new password\",\n                type: \"password\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" Confirm New Password \"), _createVNode(_component_el_form_item, {\n            label: \"Confirm New Password\",\n            prop: \"confirmPassword\"\n          }, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_input, {\n                modelValue: $setup.form.confirmPassword,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = function ($event) {\n                  return $setup.form.confirmPassword = $event;\n                }),\n                placeholder: \"Confirm your new password\",\n                type: \"password\",\n                \"show-password\": \"\"\n              }, null, 8 /* PROPS */, [\"modelValue\"])];\n            }),\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" Form Actions \"), _createVNode(_component_el_form_item, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_el_button, {\n                type: \"primary\",\n                onClick: $setup.submitForm,\n                loading: $setup.submitting\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[7] || (_cache[7] = [_createTextVNode(\" Change Password \")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\", \"loading\"]), _createVNode(_component_el_button, {\n                onClick: $setup.resetForm\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[8] || (_cache[8] = [_createTextVNode(\"Reset\")]);\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n                onClick: _cache[4] || (_cache[4] = function ($event) {\n                  return _ctx.$router.push('/profile');\n                }),\n                type: \"info\"\n              }, {\n                \"default\": _withCtx(function () {\n                  return _cache[9] || (_cache[9] = [_createTextVNode(\"Cancel\")]);\n                }),\n                _: 1 /* STABLE */\n              })];\n            }),\n            _: 1 /* STABLE */\n          })];\n        }),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\", \"rules\"])), [[_directive_loading, $setup.loading]])];\n    }),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","onClick","_cache","$event","_ctx","$router","push","_withCtx","_createTextVNode","_","_component_el_card","_createBlock","_component_el_form","ref","model","$setup","form","rules","_createCommentVNode","_component_el_form_item","label","prop","_component_el_input","modelValue","oldPassword","placeholder","type","newPassword","confirmPassword","submitForm","loading","submitting","resetForm"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\auth\\ChangePassword.vue"],"sourcesContent":["<template>\r\n  <div class=\"change-password-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Change Password</h1>\r\n      <el-button @click=\"$router.push('/profile')\">\r\n        Back to Profile\r\n      </el-button>\r\n    </div>\r\n    \r\n    <el-card>\r\n      <el-form\r\n        ref=\"formRef\"\r\n        :model=\"form\"\r\n        :rules=\"rules\"\r\n        label-position=\"top\"\r\n        v-loading=\"loading\"\r\n      >\r\n        <!-- Current Password -->\r\n        <el-form-item label=\"Current Password\" prop=\"oldPassword\">\r\n          <el-input \r\n            v-model=\"form.oldPassword\" \r\n            placeholder=\"Enter your current password\" \r\n            type=\"password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- New Password -->\r\n        <el-form-item label=\"New Password\" prop=\"newPassword\">\r\n          <el-input \r\n            v-model=\"form.newPassword\" \r\n            placeholder=\"Enter your new password\" \r\n            type=\"password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- Confirm New Password -->\r\n        <el-form-item label=\"Confirm New Password\" prop=\"confirmPassword\">\r\n          <el-input \r\n            v-model=\"form.confirmPassword\" \r\n            placeholder=\"Confirm your new password\" \r\n            type=\"password\"\r\n            show-password\r\n          />\r\n        </el-form-item>\r\n        \r\n        <!-- Form Actions -->\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" :loading=\"submitting\">\r\n            Change Password\r\n          </el-button>\r\n          <el-button @click=\"resetForm\">Reset</el-button>\r\n          <el-button @click=\"$router.push('/profile')\" type=\"info\">Cancel</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'ChangePassword',\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const formRef = ref(null)\r\n    const loading = ref(false)\r\n    const submitting = ref(false)\r\n    \r\n    // Form data\r\n    const form = reactive({\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      confirmPassword: ''\r\n    })\r\n    \r\n    // Validate password match\r\n    const validatePasswordMatch = (rule, value, callback) => {\r\n      if (value !== form.newPassword) {\r\n        callback(new Error('Passwords do not match'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    \r\n    // Form validation rules\r\n    const rules = {\r\n      oldPassword: [\r\n        { required: true, message: 'Please enter your current password', trigger: 'blur' }\r\n      ],\r\n      newPassword: [\r\n        { required: true, message: 'Please enter your new password', trigger: 'blur' },\r\n        { min: 6, message: 'Password must be at least 6 characters', trigger: 'blur' }\r\n      ],\r\n      confirmPassword: [\r\n        { required: true, message: 'Please confirm your new password', trigger: 'blur' },\r\n        { validator: validatePasswordMatch, trigger: 'blur' }\r\n      ]\r\n    }\r\n    \r\n    // Submit form\r\n    const submitForm = () => {\r\n      formRef.value.validate(async valid => {\r\n        if (!valid) return\r\n        \r\n        submitting.value = true\r\n        try {\r\n          await store.dispatch('auth/changePassword', {\r\n            oldPassword: form.oldPassword,\r\n            newPassword: form.newPassword\r\n          })\r\n          \r\n          ElMessage.success('Password changed successfully')\r\n          router.push('/profile')\r\n        } catch (error) {\r\n          console.error('Error changing password:', error)\r\n          if (error.response && error.response.status === 400) {\r\n            ElMessage.error('Current password is incorrect')\r\n          } else {\r\n            ElMessage.error('Failed to change password')\r\n          }\r\n        } finally {\r\n          submitting.value = false\r\n        }\r\n      })\r\n    }\r\n    \r\n    // Reset form\r\n    const resetForm = () => {\r\n      formRef.value.resetFields()\r\n    }\r\n    \r\n    return {\r\n      formRef,\r\n      form,\r\n      rules,\r\n      loading,\r\n      submitting,\r\n      submitForm,\r\n      resetForm\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}