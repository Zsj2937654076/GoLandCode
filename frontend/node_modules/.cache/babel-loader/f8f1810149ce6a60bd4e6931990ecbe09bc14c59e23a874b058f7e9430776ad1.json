{"ast":null,"code":"import axios from 'axios';\n\n// API base URL\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:8080/api';\nconst state = {\n  students: [],\n  student: null,\n  pagination: {\n    total: 0,\n    page: 1,\n    pageSize: 10\n  },\n  filters: {\n    classId: '',\n    studentId: '',\n    name: ''\n  }\n};\nconst getters = {\n  allStudents: state => state.students,\n  studentById: state => id => state.students.find(student => student.id === id),\n  currentStudent: state => state.student,\n  pagination: state => state.pagination,\n  filters: state => state.filters\n};\nconst actions = {\n  // Fetch students with pagination and filters\n  async fetchStudents({\n    commit,\n    state\n  }) {\n    try {\n      const {\n        page,\n        pageSize\n      } = state.pagination;\n      const {\n        classId,\n        studentId,\n        name\n      } = state.filters;\n\n      // Build query params\n      let params = `page=${page}&page_size=${pageSize}`;\n      if (classId) params += `&class_id=${classId}`;\n      if (studentId) params += `&student_id=${studentId}`;\n      if (name) params += `&name=${name}`;\n      const response = await axios.get(`${API_URL}/students?${params}`);\n      const {\n        data,\n        pagination\n      } = response.data;\n      commit('SET_STUDENTS', data);\n      commit('SET_PAGINATION', pagination);\n      return data;\n    } catch (error) {\n      console.error('Error fetching students:', error);\n      throw error;\n    }\n  },\n  // Fetch a single student by ID\n  async fetchStudent({\n    commit\n  }, id) {\n    try {\n      const response = await axios.get(`${API_URL}/students/${id}`);\n      commit('SET_STUDENT', response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching student ${id}:`, error);\n      throw error;\n    }\n  },\n  // Create a new student\n  async createStudent({\n    commit\n  }, student) {\n    try {\n      const response = await axios.post(`${API_URL}/students`, student);\n      commit('ADD_STUDENT', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating student:', error);\n      throw error;\n    }\n  },\n  // Update an existing student\n  async updateStudent({\n    commit\n  }, student) {\n    try {\n      const response = await axios.put(`${API_URL}/students/${student.id}`, student);\n      commit('UPDATE_STUDENT', response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`Error updating student ${student.id}:`, error);\n      throw error;\n    }\n  },\n  // Delete a student\n  async deleteStudent({\n    commit\n  }, id) {\n    try {\n      await axios.delete(`${API_URL}/students/${id}`);\n      commit('DELETE_STUDENT', id);\n      return id;\n    } catch (error) {\n      console.error(`Error deleting student ${id}:`, error);\n      throw error;\n    }\n  },\n  // Update filters\n  setFilters({\n    commit,\n    dispatch\n  }, filters) {\n    commit('SET_FILTERS', filters);\n    // Reset to first page when filters change\n    commit('SET_PAGE', 1);\n    return dispatch('fetchStudents');\n  },\n  // Update pagination\n  setPagination({\n    commit,\n    dispatch\n  }, pagination) {\n    commit('SET_PAGINATION', pagination);\n    return dispatch('fetchStudents');\n  },\n  // Set current page\n  setPage({\n    commit,\n    dispatch\n  }, page) {\n    commit('SET_PAGE', page);\n    return dispatch('fetchStudents');\n  }\n};\nconst mutations = {\n  SET_STUDENTS(state, students) {\n    state.students = students;\n  },\n  SET_STUDENT(state, student) {\n    state.student = student;\n  },\n  ADD_STUDENT(state, student) {\n    state.students.unshift(student);\n  },\n  UPDATE_STUDENT(state, updatedStudent) {\n    const index = state.students.findIndex(s => s.id === updatedStudent.id);\n    if (index !== -1) {\n      state.students.splice(index, 1, updatedStudent);\n    }\n    if (state.student && state.student.id === updatedStudent.id) {\n      state.student = updatedStudent;\n    }\n  },\n  DELETE_STUDENT(state, id) {\n    state.students = state.students.filter(student => student.id !== id);\n    if (state.student && state.student.id === id) {\n      state.student = null;\n    }\n  },\n  SET_PAGINATION(state, pagination) {\n    state.pagination = {\n      ...state.pagination,\n      ...pagination\n    };\n  },\n  SET_PAGE(state, page) {\n    state.pagination.page = page;\n  },\n  SET_FILTERS(state, filters) {\n    state.filters = {\n      ...state.filters,\n      ...filters\n    };\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","API_URL","process","env","VUE_APP_API_URL","state","students","student","pagination","total","page","pageSize","filters","classId","studentId","name","getters","allStudents","studentById","id","find","currentStudent","actions","fetchStudents","commit","params","response","get","data","error","console","fetchStudent","createStudent","post","updateStudent","put","deleteStudent","delete","setFilters","dispatch","setPagination","setPage","mutations","SET_STUDENTS","SET_STUDENT","ADD_STUDENT","unshift","UPDATE_STUDENT","updatedStudent","index","findIndex","s","splice","DELETE_STUDENT","filter","SET_PAGINATION","SET_PAGE","SET_FILTERS","namespaced"],"sources":["E:/GoLand20240404/Project/student_management/frontend/src/store/modules/students.js"],"sourcesContent":["import axios from 'axios'\r\n\r\n// API base URL\r\nconst API_URL = process.env.VUE_APP_API_URL || 'http://localhost:8080/api'\r\n\r\nconst state = {\r\n  students: [],\r\n  student: null,\r\n  pagination: {\r\n    total: 0,\r\n    page: 1,\r\n    pageSize: 10\r\n  },\r\n  filters: {\r\n    classId: '',\r\n    studentId: '',\r\n    name: ''\r\n  }\r\n}\r\n\r\nconst getters = {\r\n  allStudents: state => state.students,\r\n  studentById: state => id => state.students.find(student => student.id === id),\r\n  currentStudent: state => state.student,\r\n  pagination: state => state.pagination,\r\n  filters: state => state.filters\r\n}\r\n\r\nconst actions = {\r\n  // Fetch students with pagination and filters\r\n  async fetchStudents({ commit, state }) {\r\n    try {\r\n      const { page, pageSize } = state.pagination\r\n      const { classId, studentId, name } = state.filters\r\n      \r\n      // Build query params\r\n      let params = `page=${page}&page_size=${pageSize}`\r\n      if (classId) params += `&class_id=${classId}`\r\n      if (studentId) params += `&student_id=${studentId}`\r\n      if (name) params += `&name=${name}`\r\n      \r\n      const response = await axios.get(`${API_URL}/students?${params}`)\r\n      const { data, pagination } = response.data\r\n      \r\n      commit('SET_STUDENTS', data)\r\n      commit('SET_PAGINATION', pagination)\r\n      \r\n      return data\r\n    } catch (error) {\r\n      console.error('Error fetching students:', error)\r\n      throw error\r\n    }\r\n  },\r\n  \r\n  // Fetch a single student by ID\r\n  async fetchStudent({ commit }, id) {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/students/${id}`)\r\n      commit('SET_STUDENT', response.data)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(`Error fetching student ${id}:`, error)\r\n      throw error\r\n    }\r\n  },\r\n  \r\n  // Create a new student\r\n  async createStudent({ commit }, student) {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/students`, student)\r\n      commit('ADD_STUDENT', response.data)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error('Error creating student:', error)\r\n      throw error\r\n    }\r\n  },\r\n  \r\n  // Update an existing student\r\n  async updateStudent({ commit }, student) {\r\n    try {\r\n      const response = await axios.put(`${API_URL}/students/${student.id}`, student)\r\n      commit('UPDATE_STUDENT', response.data)\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(`Error updating student ${student.id}:`, error)\r\n      throw error\r\n    }\r\n  },\r\n  \r\n  // Delete a student\r\n  async deleteStudent({ commit }, id) {\r\n    try {\r\n      await axios.delete(`${API_URL}/students/${id}`)\r\n      commit('DELETE_STUDENT', id)\r\n      return id\r\n    } catch (error) {\r\n      console.error(`Error deleting student ${id}:`, error)\r\n      throw error\r\n    }\r\n  },\r\n  \r\n  // Update filters\r\n  setFilters({ commit, dispatch }, filters) {\r\n    commit('SET_FILTERS', filters)\r\n    // Reset to first page when filters change\r\n    commit('SET_PAGE', 1)\r\n    return dispatch('fetchStudents')\r\n  },\r\n  \r\n  // Update pagination\r\n  setPagination({ commit, dispatch }, pagination) {\r\n    commit('SET_PAGINATION', pagination)\r\n    return dispatch('fetchStudents')\r\n  },\r\n  \r\n  // Set current page\r\n  setPage({ commit, dispatch }, page) {\r\n    commit('SET_PAGE', page)\r\n    return dispatch('fetchStudents')\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  SET_STUDENTS(state, students) {\r\n    state.students = students\r\n  },\r\n  SET_STUDENT(state, student) {\r\n    state.student = student\r\n  },\r\n  ADD_STUDENT(state, student) {\r\n    state.students.unshift(student)\r\n  },\r\n  UPDATE_STUDENT(state, updatedStudent) {\r\n    const index = state.students.findIndex(s => s.id === updatedStudent.id)\r\n    if (index !== -1) {\r\n      state.students.splice(index, 1, updatedStudent)\r\n    }\r\n    if (state.student && state.student.id === updatedStudent.id) {\r\n      state.student = updatedStudent\r\n    }\r\n  },\r\n  DELETE_STUDENT(state, id) {\r\n    state.students = state.students.filter(student => student.id !== id)\r\n    if (state.student && state.student.id === id) {\r\n      state.student = null\r\n    }\r\n  },\r\n  SET_PAGINATION(state, pagination) {\r\n    state.pagination = { ...state.pagination, ...pagination }\r\n  },\r\n  SET_PAGE(state, page) {\r\n    state.pagination.page = page\r\n  },\r\n  SET_FILTERS(state, filters) {\r\n    state.filters = { ...state.filters, ...filters }\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n} \r\n "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}