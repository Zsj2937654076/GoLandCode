{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'ClassDetail',\n  props: {\n    id: {\n      type: [Number, String],\n      required: true\n    }\n  },\n  setup(props) {\n    const store = useStore();\n    const router = useRouter();\n    const loading = ref(false);\n    const loadingStudents = ref(false);\n\n    // Delete dialog state\n    const deleteDialog = reactive({\n      visible: false,\n      loading: false\n    });\n\n    // Get class and students from store\n    const classData = computed(() => store.getters['classes/currentClass']);\n    const students = computed(() => store.getters['classes/classStudents']);\n\n    // Format date\n    const formatDate = dateString => {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    };\n\n    // Fetch class data\n    const fetchClassData = async () => {\n      loading.value = true;\n      try {\n        await store.dispatch('classes/fetchClass', Number(props.id));\n      } catch (error) {\n        console.error('Error fetching class:', error);\n        ElMessage.error('Failed to load class data');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // Fetch students in this class\n    const fetchClassStudents = async () => {\n      loadingStudents.value = true;\n      try {\n        await store.dispatch('classes/fetchClassStudents', Number(props.id));\n      } catch (error) {\n        console.error('Error fetching class students:', error);\n        ElMessage.error('Failed to load students');\n      } finally {\n        loadingStudents.value = false;\n      }\n    };\n\n    // Delete class\n    const confirmDelete = () => {\n      if (classData.value.student_count > 0) {\n        ElMessage.warning('Cannot delete a class that has students');\n        return;\n      }\n      deleteDialog.visible = true;\n    };\n    const deleteClass = async () => {\n      deleteDialog.loading = true;\n      try {\n        await store.dispatch('classes/deleteClass', Number(props.id));\n        ElMessage.success('Class deleted successfully');\n        router.push('/classes');\n      } catch (error) {\n        console.error('Error deleting class:', error);\n        if (error.response && error.response.status === 409) {\n          ElMessage.error('Cannot delete a class that has associated students');\n        } else {\n          ElMessage.error('Failed to delete class');\n        }\n      } finally {\n        deleteDialog.loading = false;\n        deleteDialog.visible = false;\n      }\n    };\n\n    // Fetch data on component mount\n    onMounted(async () => {\n      await fetchClassData();\n      if (classData.value) {\n        await fetchClassStudents();\n      }\n    });\n    return {\n      classData,\n      students,\n      loading,\n      loadingStudents,\n      deleteDialog,\n      formatDate,\n      confirmDelete,\n      deleteClass\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useStore","useRouter","ElMessage","name","props","id","type","Number","String","required","setup","store","router","loading","loadingStudents","deleteDialog","visible","classData","getters","students","formatDate","dateString","date","Date","toLocaleString","fetchClassData","value","dispatch","error","console","fetchClassStudents","confirmDelete","student_count","warning","deleteClass","success","push","response","status"],"sources":["E:\\GoLand20240404\\Project\\student_management\\frontend\\src\\views\\classes\\ClassDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"class-detail-container\">\r\n    <div class=\"page-header\">\r\n      <h1 class=\"page-title\">Class Details</h1>\r\n      <div class=\"action-buttons\">\r\n        <el-button @click=\"$router.push('/classes')\">\r\n          Back to Classes\r\n        </el-button>\r\n        <el-button \r\n          type=\"primary\" \r\n          @click=\"$router.push(`/classes/${id}/edit`)\"\r\n          v-if=\"classData\"\r\n        >\r\n          Edit Class\r\n        </el-button>\r\n      </div>\r\n    </div>\r\n    \r\n    <el-card v-loading=\"loading\">\r\n      <template v-if=\"classData\">\r\n        <el-descriptions :column=\"1\" border>\r\n          <el-descriptions-item label=\"Class Name\">\r\n            {{ classData.name }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Description\">\r\n            {{ classData.description || 'No description' }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Student Count\">\r\n            {{ classData.student_count }}\r\n          </el-descriptions-item>\r\n          \r\n          <el-descriptions-item label=\"Created At\">\r\n            {{ formatDate(classData.created_at) }}\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n        \r\n        <div class=\"action-buttons mt-20\">\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"confirmDelete\"\r\n            :disabled=\"classData.student_count > 0\"\r\n          >\r\n            Delete Class\r\n          </el-button>\r\n        </div>\r\n        \r\n        <!-- Students in this class -->\r\n        <div class=\"students-section mt-20\">\r\n          <h2>Students in this Class</h2>\r\n          \r\n          <el-table \r\n            :data=\"students\" \r\n            v-loading=\"loadingStudents\" \r\n            style=\"width: 100%\"\r\n            border\r\n          >\r\n            <el-table-column prop=\"student_id\" label=\"Student ID\" width=\"120\" />\r\n            <el-table-column prop=\"name\" label=\"Name\" />\r\n            <el-table-column prop=\"email\" label=\"Email\" />\r\n            <el-table-column prop=\"phone\" label=\"Phone\" width=\"150\" />\r\n            <el-table-column label=\"Actions\" width=\"150\" fixed=\"right\">\r\n              <template #default=\"scope\">\r\n                <el-button \r\n                  size=\"small\" \r\n                  type=\"primary\" \r\n                  @click=\"$router.push(`/students/${scope.row.id}`)\"\r\n                >\r\n                  View\r\n                </el-button>\r\n                <el-button \r\n                  size=\"small\" \r\n                  type=\"warning\" \r\n                  @click=\"$router.push(`/students/${scope.row.id}/edit`)\"\r\n                >\r\n                  Edit\r\n                </el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          \r\n          <!-- Empty state for students -->\r\n          <el-empty \r\n            v-if=\"students.length === 0 && !loadingStudents\" \r\n            description=\"No students in this class\"\r\n          >\r\n            <el-button type=\"primary\" @click=\"$router.push('/students/new')\">\r\n              Add Student\r\n            </el-button>\r\n          </el-empty>\r\n        </div>\r\n      </template>\r\n      \r\n      <el-empty \r\n        v-else-if=\"!loading\" \r\n        description=\"Class not found\"\r\n      />\r\n    </el-card>\r\n    \r\n    <!-- Delete Confirmation Dialog -->\r\n    <el-dialog\r\n      v-model=\"deleteDialog.visible\"\r\n      title=\"Confirm Delete\"\r\n      width=\"30%\"\r\n    >\r\n      <span>\r\n        Are you sure you want to delete this class?\r\n        <br><br>\r\n        <strong v-if=\"classData?.student_count > 0\" class=\"text-danger\">\r\n          Warning: This class has {{ classData.student_count }} students. \r\n          You cannot delete a class that has students.\r\n        </strong>\r\n      </span>\r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"deleteDialog.visible = false\">Cancel</el-button>\r\n          <el-button \r\n            type=\"danger\" \r\n            @click=\"deleteClass\" \r\n            :loading=\"deleteDialog.loading\"\r\n            :disabled=\"classData?.student_count > 0\"\r\n          >\r\n            Delete\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, computed, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nexport default {\r\n  name: 'ClassDetail',\r\n  props: {\r\n    id: {\r\n      type: [Number, String],\r\n      required: true\r\n    }\r\n  },\r\n  setup(props) {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const loading = ref(false)\r\n    const loadingStudents = ref(false)\r\n    \r\n    // Delete dialog state\r\n    const deleteDialog = reactive({\r\n      visible: false,\r\n      loading: false\r\n    })\r\n    \r\n    // Get class and students from store\r\n    const classData = computed(() => store.getters['classes/currentClass'])\r\n    const students = computed(() => store.getters['classes/classStudents'])\r\n    \r\n    // Format date\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return 'N/A'\r\n      const date = new Date(dateString)\r\n      return date.toLocaleString()\r\n    }\r\n    \r\n    // Fetch class data\r\n    const fetchClassData = async () => {\r\n      loading.value = true\r\n      try {\r\n        await store.dispatch('classes/fetchClass', Number(props.id))\r\n      } catch (error) {\r\n        console.error('Error fetching class:', error)\r\n        ElMessage.error('Failed to load class data')\r\n      } finally {\r\n        loading.value = false\r\n      }\r\n    }\r\n    \r\n    // Fetch students in this class\r\n    const fetchClassStudents = async () => {\r\n      loadingStudents.value = true\r\n      try {\r\n        await store.dispatch('classes/fetchClassStudents', Number(props.id))\r\n      } catch (error) {\r\n        console.error('Error fetching class students:', error)\r\n        ElMessage.error('Failed to load students')\r\n      } finally {\r\n        loadingStudents.value = false\r\n      }\r\n    }\r\n    \r\n    // Delete class\r\n    const confirmDelete = () => {\r\n      if (classData.value.student_count > 0) {\r\n        ElMessage.warning('Cannot delete a class that has students')\r\n        return\r\n      }\r\n      deleteDialog.visible = true\r\n    }\r\n    \r\n    const deleteClass = async () => {\r\n      deleteDialog.loading = true\r\n      try {\r\n        await store.dispatch('classes/deleteClass', Number(props.id))\r\n        ElMessage.success('Class deleted successfully')\r\n        router.push('/classes')\r\n      } catch (error) {\r\n        console.error('Error deleting class:', error)\r\n        if (error.response && error.response.status === 409) {\r\n          ElMessage.error('Cannot delete a class that has associated students')\r\n        } else {\r\n          ElMessage.error('Failed to delete class')\r\n        }\r\n      } finally {\r\n        deleteDialog.loading = false\r\n        deleteDialog.visible = false\r\n      }\r\n    }\r\n    \r\n    // Fetch data on component mount\r\n    onMounted(async () => {\r\n      await fetchClassData()\r\n      if (classData.value) {\r\n        await fetchClassStudents()\r\n      }\r\n    })\r\n    \r\n    return {\r\n      classData,\r\n      students,\r\n      loading,\r\n      loadingStudents,\r\n      deleteDialog,\r\n      formatDate,\r\n      confirmDelete,\r\n      deleteClass\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.page-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.students-section {\r\n  margin-top: 30px;\r\n}\r\n\r\n.students-section h2 {\r\n  margin-bottom: 15px;\r\n  font-size: 18px;\r\n}\r\n\r\n.text-danger {\r\n  color: #F56C6C;\r\n}\r\n</style> "],"mappings":"AAoIA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AACvD,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,KAAKA,CAACN,KAAK,EAAE;IACX,MAAMO,KAAI,GAAIX,QAAQ,CAAC;IACvB,MAAMY,MAAK,GAAIX,SAAS,CAAC;IACzB,MAAMY,OAAM,GAAIjB,GAAG,CAAC,KAAK;IACzB,MAAMkB,eAAc,GAAIlB,GAAG,CAAC,KAAK;;IAEjC;IACA,MAAMmB,YAAW,GAAIlB,QAAQ,CAAC;MAC5BmB,OAAO,EAAE,KAAK;MACdH,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMI,SAAQ,GAAInB,QAAQ,CAAC,MAAMa,KAAK,CAACO,OAAO,CAAC,sBAAsB,CAAC;IACtE,MAAMC,QAAO,GAAIrB,QAAQ,CAAC,MAAMa,KAAK,CAACO,OAAO,CAAC,uBAAuB,CAAC;;IAEtE;IACA,MAAME,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,KAAI;MAC5B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAOC,IAAI,CAACE,cAAc,CAAC;IAC7B;;IAEA;IACA,MAAMC,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjCZ,OAAO,CAACa,KAAI,GAAI,IAAG;MACnB,IAAI;QACF,MAAMf,KAAK,CAACgB,QAAQ,CAAC,oBAAoB,EAAEpB,MAAM,CAACH,KAAK,CAACC,EAAE,CAAC;MAC7D,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK;QAC5C1B,SAAS,CAAC0B,KAAK,CAAC,2BAA2B;MAC7C,UAAU;QACRf,OAAO,CAACa,KAAI,GAAI,KAAI;MACtB;IACF;;IAEA;IACA,MAAMI,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACrChB,eAAe,CAACY,KAAI,GAAI,IAAG;MAC3B,IAAI;QACF,MAAMf,KAAK,CAACgB,QAAQ,CAAC,4BAA4B,EAAEpB,MAAM,CAACH,KAAK,CAACC,EAAE,CAAC;MACrE,EAAE,OAAOuB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK;QACrD1B,SAAS,CAAC0B,KAAK,CAAC,yBAAyB;MAC3C,UAAU;QACRd,eAAe,CAACY,KAAI,GAAI,KAAI;MAC9B;IACF;;IAEA;IACA,MAAMK,aAAY,GAAIA,CAAA,KAAM;MAC1B,IAAId,SAAS,CAACS,KAAK,CAACM,aAAY,GAAI,CAAC,EAAE;QACrC9B,SAAS,CAAC+B,OAAO,CAAC,yCAAyC;QAC3D;MACF;MACAlB,YAAY,CAACC,OAAM,GAAI,IAAG;IAC5B;IAEA,MAAMkB,WAAU,GAAI,MAAAA,CAAA,KAAY;MAC9BnB,YAAY,CAACF,OAAM,GAAI,IAAG;MAC1B,IAAI;QACF,MAAMF,KAAK,CAACgB,QAAQ,CAAC,qBAAqB,EAAEpB,MAAM,CAACH,KAAK,CAACC,EAAE,CAAC;QAC5DH,SAAS,CAACiC,OAAO,CAAC,4BAA4B;QAC9CvB,MAAM,CAACwB,IAAI,CAAC,UAAU;MACxB,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK;QAC5C,IAAIA,KAAK,CAACS,QAAO,IAAKT,KAAK,CAACS,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACnDpC,SAAS,CAAC0B,KAAK,CAAC,oDAAoD;QACtE,OAAO;UACL1B,SAAS,CAAC0B,KAAK,CAAC,wBAAwB;QAC1C;MACF,UAAU;QACRb,YAAY,CAACF,OAAM,GAAI,KAAI;QAC3BE,YAAY,CAACC,OAAM,GAAI,KAAI;MAC7B;IACF;;IAEA;IACAjB,SAAS,CAAC,YAAY;MACpB,MAAM0B,cAAc,CAAC;MACrB,IAAIR,SAAS,CAACS,KAAK,EAAE;QACnB,MAAMI,kBAAkB,CAAC;MAC3B;IACF,CAAC;IAED,OAAO;MACLb,SAAS;MACTE,QAAQ;MACRN,OAAO;MACPC,eAAe;MACfC,YAAY;MACZK,UAAU;MACVW,aAAa;MACbG;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}